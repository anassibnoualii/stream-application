name: Build and Deploy Stream Application

on:
  push:
    branches:
      - '*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Set up Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: 'app/yarn.lock'

      - name: Cache API Gradle packages
        uses: actions/cache@v3
        with:
          path: api/.gradle/caches
          key: ${{ runner.os }}-gradle-api-${{ hashFiles('api/build.gradle', 'api/settings.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-api

      - name: Cache Producer Gradle packages
        uses: actions/cache@v3
        with:
          path: producer/.gradle/caches
          key: ${{ runner.os }}-gradle-producer-${{ hashFiles('producer/build.gradle', 'producer/settings.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-producer

      - name: Cache YARN packages
        uses: actions/cache@v3
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node

      - name: Build api
        run: ./gradlew build
        working-directory: api

      - name: Build producer
        run: ./gradlew build
        working-directory: producer

      - name: Build App
        run: |
          yarn install --frozen-lockfile
          yarn build
        working-directory: app

      - name: Build Docker Images
        run: |
          docker build -t ${{ secrets.DOCKER_REGISTRY }}/api:${{ github.ref_name }} -f api/Dockerfile .
          docker build -t ${{ secrets.DOCKER_REGISTRY }}/producer:${{ github.ref_name }} -f producer/Dockerfile .
          docker build -t ${{ secrets.DOCKER_REGISTRY }}/app:${{ github.ref_name }} -f app/Dockerfile .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - name: Push Docker images to registry
        run: |
          docker push ${{ secrets.DOCKER_REGISTRY }}/api:${{ github.ref_name }}
          docker push ${{ secrets.DOCKER_REGISTRY }}/producer:${{ github.ref_name }}
          docker push ${{ secrets.DOCKER_REGISTRY }}/app:${{ github.ref_name }}

      - name: Deploy to Heroku
        id: heroku
        uses: snithyanantham/docker-compose-multiple-apps-heroku-deploy@v1.0
        with:
          email: ${{ secrets.EMAIL }}
          api_key: ${{ secrets.HEROKU_API_KEY }}
          docker_compose_file: 'docker-compose-prod.yml'
        env:
          CI: true